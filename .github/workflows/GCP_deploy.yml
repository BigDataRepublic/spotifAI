name: Deploy Docker Images to GCP

on:
  push:
    branches:
      - main
      - 36-add-docker-ci

jobs:
  deploy-docker-images:
    name: Build and push Docker images and deploy to Cloud Run
    runs-on: ubuntu-latest

    steps:

      - name: Login
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Checkout repository
        uses: actions/checkout@v2

      # get the github sha to add as a tag to the docker image, useful as a reference for builds
      - name: get sha
        id: vars
        run: |
          echo ::set-output name=sha_short::$(git rev-parse --short=8 ${{ github.sha }})

      - name: Build Docker image nmf_scraper
        run: |
          cd $DOCKER_PATH
          docker build -t gcr.io/spotifai/$IMAGE_NAME:$SHORTSHA \
          -t gcr.io/spotifai/$IMAGE_NAME:latest .
        env:
          DOCKER_PATH: ./spotifAI/data/
          IMAGE_NAME: nmf_scraper
          SHORTSHA: ${{ steps.vars.outputs.sha_short }}

      - name: Push Docker image nmf_scraper
        run: docker push gcr.io/spotifai/$IMAGE_NAME --all-tags
        env:
          IMAGE_NAME: nmf_scraper

      - name: Deploy Docker image nmf_scraper
        run: |
          gcloud run deploy $CLOUD_RUN_NAME \
          --image gcr.io/spotifai/$IMAGE_NAME:latest \
          --region europe-west1 --platform managed \
          --port=$PORT
        env:
          CLOUD_RUN_NAME: nmfscraper
          IMAGE_NAME: nmf_scraper
          PORT: 8080

      - name: Build Docker image playlist_publisher
        run: |
          cd $DOCKER_PATH
          docker build -t gcr.io/spotifai/$IMAGE_NAME:$SHORTSHA \
          -t gcr.io/spotifai/$IMAGE_NAME:latest .
        env:
          DOCKER_PATH: ./spotifAI/deployment/
          IMAGE_NAME: playlist_publisher
          SHORTSHA: ${{ steps.vars.outputs.sha_short }}

      - name: Push Docker image playlist_publisher
        run: docker push gcr.io/spotifai/$IMAGE_NAME --all-tags
        env:
          IMAGE_NAME: playlist_publisher

      - name: Deploy Docker image playlist_publisher
        run: |
          gcloud run deploy $CLOUD_RUN_NAME \
          --image gcr.io/spotifai/$IMAGE_NAME:latest \
          --region europe-west1 --platform managed \
          --port=$PORT
        env:
          CLOUD_RUN_NAME: playlistpublisher
          IMAGE_NAME: playlist_publisher
          PORT: 8082

      - name: Build Docker image spotifai_app_runner
        run: |
          cd $DOCKER_PATH
          docker build -t gcr.io/spotifai/$IMAGE_NAME:$SHORTSHA \
          -t gcr.io/spotifai/$IMAGE_NAME:latest .
        env:
          DOCKER_PATH: ./spotifAI/
          IMAGE_NAME: spotifai_app_runner
          SHORTSHA: ${{ steps.vars.outputs.sha_short }}

      - name: Push Docker image spotifai_app_runner
        run: docker push gcr.io/spotifai/$IMAGE_NAME --all-tags
        env:
          IMAGE_NAME: spotifai_app_runner

      - name: Deploy Docker image spotifai_app_runner
        run: |
          gcloud run deploy $CLOUD_RUN_NAME \
          --image gcr.io/spotifai/$IMAGE_NAME:latest \
          --region europe-west1 --platform managed \
          --port=$PORT
        env:
          CLOUD_RUN_NAME: spotifaiapprunner
          IMAGE_NAME: spotifai_app_runner
          PORT: 8083

      - name: Schedule job on Cloud Scheduler
        run: |
          gcloud scheduler jobs create http $SCHEDULED_JOB_NAME \
          -- description $DESCRIPTION \
          --schedule $SCHEDULE \
          --uri $URI \
          --http-method $METHOD
        env:
          SCHEDULED_JOB_NAME: weekly_playlist_update
          DESCRIPTION: "get new tracks, predict hit potential and publish top 20 of new tracks on a weekly basis"
          SCHEDULE: "0 12 * * 5"
          URI: "https://spotifaiapprunner-fvfg5t6eda-ew.a.run.app/run_app/"
          METHOD: POST
